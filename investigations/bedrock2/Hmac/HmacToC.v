Require Import Coq.Lists.List.
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Require Import bedrock2.ToCString.
Require Import Bedrock2Experiments.LibBase.Bitfield.
Require Import Bedrock2Experiments.Hmac.Hmac.
Import ListNotations.
Local Open Scope string_scope.
Local Open Scope Z_scope.

(* Note: There's a bug in ProofGeneral that replaces newlines in strings by spaces
   https://github.com/ProofGeneral/PG/issues/428.
   To get correct C output, rely on the output created using `make` and `coqc`. *)
Definition hmac_c_template_top : string := "// Autogenerated from Coq based on LowRISC implementation

// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

#include ""sw/device/silicon_creator/lib/drivers/hmac.h""

#include ""sw/device/lib/base/bitfield.h""
#include ""sw/device/lib/base/memory.h""
#include ""sw/device/silicon_creator/lib/base/abs_mmio.h""
#include ""sw/device/silicon_creator/lib/error.h""

#include ""hmac_regs.h""  // Generated.
#include ""hw/top_earlgrey/sw/autogen/top_earlgrey.h""


// bedrock2 memory-access functions
static inline uintptr_t _br2_load(uintptr_t a, size_t sz) {
  uintptr_t r = 0;
  memcpy(&r, (void*)a, sz);
  return r;
}

static inline void _br2_store(uintptr_t a, uintptr_t v, size_t sz) {
  memcpy((void*)a, &v, sz);
}

".

Definition hmac_c_template_bottom : string := "
void hmac_sha256_init(void) {
  b2_hmac_sha256_init();
}

rom_error_t hmac_sha256_update(const void *data, size_t len) {
  return (rom_error_t)(b2_hmac_sha256_update((uintptr_t)data, (uintptr_t)len));
}

rom_error_t hmac_sha256_final(hmac_digest_t *digest) {
  return (rom_error_t)(b2_hmac_sha256_final((uintptr_t)digest));
}
".

Definition funcs := [
  bitfield_field32_write ; bitfield_field32_read; bitfield_bit32_read; bitfield_bit32_write;
  b2_hmac_sha256_init; b2_hmac_sha256_update; b2_hmac_sha256_final
].

Definition make_hmac_c :=
  hmac_c_template_top ++
  concat LF (map (fun f => "static " ++ c_func f) funcs) ++
  hmac_c_template_bottom.

Require Import bedrock2.Bytedump.
Local Open Scope bytedump_scope.
Goal True.
  (* Note: run using make/coqc to avoid IDE bugs causing missing newlines or spurious <infomsg>*)
  Redirect "hmac.c" let c_code := eval compute in (byte_list_of_string make_hmac_c) in idtac c_code.
Abort.
