--
-- Copyright 2020 The Project Oak Authors
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

name:                Cava2HDL

-- The package version.  See the Haskell package versioning policy (PVP)
-- for standards guiding when and how versions should be incremented.
-- https://wiki.haskell.org/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change

version:             0.1.0.0

synopsis:            Library for emitting SystemVerilog from Haskell extracted from Cava
copyright:	     Copyright 2020 The Project Oak Authors
license:             Apache-2.0
author:              Satnam Singh
maintainer:          Satnam Singh <satnam6502@gmail.com>
bug-reports:	     Satnam Singh <satnam6502@gmail.com>
build-type:          Simple
category:            Hardware
package-URL:         https://github.com/project-oak/oak-hardware/tree/master/cava
stability:           Experimental
cabal-version:        >= 1.10

library
  build-Depends:     base >= 4, mtl >= 2
  exposed-Modules:   Cava2SystemVerilog
                     BinNat
                     BinNums
                     BinInt
                     BitArithmetic
                     BitVectorOps
                     Bool
                     Bvector
                     CavaClass
                     CavaPrelude
                     Combinators
                     CombinationalMonad
                     Datatypes
                     FullAdder
                     HexString
                     IdentityMonad
                     List
                     ListUtils
                     Logic
                     Monad
                     Netlist
                     NetlistGeneration
                     Nat
                     Ndigits
                     PeanoNat
                     Signal
                     StateMonad
                     Traversable
                     UnsignedAdders
                     VectorDef
                     Vector
                     VectorUtils
                     XilinxAdder
                     Byte0
                     TestBench
                     SystemVerilogUtils

  other-Modules:     Applicative
                     BinPos
                     BinNatDef
                     ByteVector
                     Byte
                     Compare_dec
                     Decimal
                     Functor
                     Hexadecimal
                     Numeral
                     Specif
                     MonadExc
                     MonadFix
                     MonadPlus
                     MonadReader
                     MonadState
                     MonadTrans
                     MonadWriter
                     MonadZero
                     Monoid
                     Fin
                     Plus
                     Ascii
                     Basics
                     String
                     Wf

  default-language:  Haskell2010
